import streamlit as st
import yfinance as yf
import ta
import pandas as pd
import matplotlib.pyplot as plt

st.set_page_config(page_title="Crypto Dashboard", page_icon="üìà", layout="wide")

st.title("üìà Crypto Dashboard: Ph√¢n T√≠ch Ch·ªâ B√°o K·ªπ Thu·∫≠t")

# Ch·ªçn Coin & Th·ªùi gian
coins = ["BTC-USD", "ETH-USD", "BNB-USD"]
symbol = st.selectbox("Ch·ªçn Coin", coins, index=0)

period = st.selectbox(
    "Ch·ªçn Kho·∫£ng Th·ªùi Gian",
    ["1mo", "3mo", "6mo", "1y", "2y"],
    index=2
)

# T·∫£i d·ªØ li·ªáu
data = yf.download(symbol, period=period)
if data.empty:
    st.error("Kh√¥ng c√≥ d·ªØ li·ªáu! H√£y th·ª≠ coin kh√°c.")
    st.stop()

# T√≠nh ch·ªâ b√°o
close = data['Close'].squeeze()
data['MA20'] = close.rolling(window=20).mean()
data['RSI'] = ta.momentum.RSIIndicator(close, window=14).rsi()
macd = ta.trend.MACD(close)
data['MACD'] = macd.macd()
data['MACD_Signal'] = macd.macd_signal()

# Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu
st.subheader(f"B·∫£ng D·ªØ Li·ªáu {symbol}")
st.dataframe(data.tail(10))

# V·∫Ω bi·ªÉu ƒë·ªì gi√° + MA20
st.subheader("Bi·ªÉu ƒë·ªì Gi√° & MA20")
fig, ax = plt.subplots(figsize=(12, 6))
ax.plot(data.index, close, label="Close Price")
ax.plot(data.index, data['MA20'], label="MA20")
ax.set_title(f"{symbol} - Price & MA20")
ax.legend()
st.pyplot(fig)

# V·∫Ω MACD
st.subheader("Bi·ªÉu ƒë·ªì MACD")
fig2, ax2 = plt.subplots(figsize=(12, 4))
ax2.plot(data.index, data['MACD'], label="MACD")
ax2.plot(data.index, data['MACD_Signal'], label="MACD Signal")
ax2.set_title(f"{symbol} - MACD")
ax2.legend()
st.pyplot(fig2)

# V·∫Ω RSI
st.subheader("Bi·ªÉu ƒë·ªì RSI")
fig3, ax3 = plt.subplots(figsize=(12, 3))
ax3.plot(data.index, data['RSI'], label="RSI", color="purple")
ax3.axhline(70, color="red", linestyle="--")
ax3.axhline(30, color="green", linestyle="--")
ax3.set_title(f"{symbol} - RSI")
ax3.legend()
st.pyplot(fig3)

# === K·∫øt lu·∫≠n + G·ª£i √Ω MUA/B√ÅN ===
st.subheader("üîë K·∫øt Lu·∫≠n & G·ª£i √ù")

latest = data.tail(1)
price = latest['Close'].values[0].item()
ma20 = latest['MA20'].values[0].item()
rsi = latest['RSI'].values[0].item()
macd_val = latest['MACD'].values[0].item()
macd_sig = latest['MACD_Signal'].values[0].item()

trend = "Gi√° tr√™n MA20 ‚ûú Xu h∆∞·ªõng TƒÇNG" if price > ma20 else "Gi√° d∆∞·ªõi MA20 ‚ûú Xu h∆∞·ªõng GI·∫¢M"
rsi_state = (
    "RSI cao ‚ûú Qu√° mua" if rsi > 70 else
    "RSI th·∫•p ‚ûú Qu√° b√°n" if rsi < 30 else
    "RSI trung t√≠nh"
)
macd_state = (
    "MACD tr√™n Signal ‚ûú T√≠n hi·ªáu TƒÇNG" if macd_val > macd_sig else
    "MACD d∆∞·ªõi Signal ‚ûú T√≠n hi·ªáu GI·∫¢M"
)

advice = (
    "üëâ G·ª¢I √ù: MUA (Uptrend m·ªõi b·∫Øt ƒë·∫ßu)" if (price > ma20 and macd_val > macd_sig and 40 < rsi < 60)
    else "üëâ G·ª¢I √ù: B√ÅN ho·∫∑c ƒê·ª®NG NGO√ÄI (Downtrend)" if (price < ma20 and macd_val < macd_sig)
    else "üëâ G·ª¢I √ù: Quan s√°t th√™m, ch∆∞a r√µ r√†ng."
)

st.write(f"- **{trend}**")
st.write(f"- **{rsi_state}**")
st.write(f"- **{macd_state}**")
st.info(advice)
